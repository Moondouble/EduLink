<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="EduLink.mapper.StudentMapper">
<sql id="studentColumnsBase">
    STUDENT_NUM as studentNum, STUDENT_NAME as studentName, STUDENT_ID as studentId, STUDENT_PW as studentPw,
    STUDENT_EMAIL as studentEmail, STUDENT_EMAIL_CONF as studentEmailConf, STUDENT_REGIST as studentRegist,
    STUDENT_BIRTH as studentBirth, STUDENT_JUMIN as studentJumin, STUDENT_ADDR as studentAddr,
    STUDENT_ADDR_DETAIL as studentAddrDetail, STUDENT_POST as studentPost, STUDENT_PHONE1 as studentPhone1,
    STUDENT_PHONE2 as studentPhone2, STUDENT_IMAGE as studentImage, STUDENT_STORE_IMAGE as studentStoreImage
</sql>

<insert id="studentInsert" parameterType="studentDTO">
    insert into student (
        STUDENT_NUM, STUDENT_NAME, STUDENT_ID, STUDENT_PW,
        STUDENT_EMAIL, STUDENT_EMAIL_CONF, STUDENT_REGIST,
        STUDENT_BIRTH, STUDENT_JUMIN, STUDENT_ADDR,
        STUDENT_ADDR_DETAIL, STUDENT_POST, STUDENT_PHONE1,
        STUDENT_PHONE2, STUDENT_IMAGE, STUDENT_STORE_IMAGE
    )
    values (
        #{studentNum}, #{studentName}, #{studentId}, #{studentPw},
        #{studentEmail}, null, sysdate,
        #{studentBirth}, #{studentJumin}, #{studentAddr},
        #{studentAddrDetail}, #{studentPost}, #{studentPhone1},
        #{studentPhone2}, #{studentImage},#{studentStoreImage}
    )
</insert>

<select id="studentSelectAll" resultType="studentDTO" parameterType="startEndPageDTO">
select * from (
	select ROW_NUMBER() over (order by STUDENT_NUM) as rn,
	       <include refid="studentColumnsBase" />
	from student
	<where>
		<!-- searchWord에 값이 없으므로 값이 있을 때만 사용하게 조건을 준다. -->
		<if test="searchWord != null">
		<!-- 검색 데이터가 일부만 사용할 수 있으므로 like을 사용하고 여러 컬럼을 검사하도록 한다. -->
			STUDENT_NAME like '%' || #{searchWord} || '%'
			or STUDENT_ID like '%' || #{searchWord} || '%'
			or STUDENT_NUM like '%' || #{searchWord} ||'%'
		</if>
	</where>
) sub1
where rn between #{startRow} and #{endRow}
</select>
<select id="studentCount" parameterType="string" resultType="integer"> 
    select count(*) from student
    <if test='searchWord != null'>
        <where>
       STUDENT_NAME like '%' || #{searchWord} || '%'
			or STUDENT_ID like '%' || #{searchWord} || '%'
			or STUDENT_NUM like '%' || #{searchWord} ||'%'
        </where>  
    </if>
</select>
<select id="studentSelectOne" parameterType="string" resultType="studentDTO">
     select <include refid="studentColumnsBase" />
     from student
     where student_num = #{studentNum}
</select>
<update id="studentUpdate" parameterType="studentDTO">
update student
set  STUDENT_NAME = #{studentName}
    ,STUDENT_ID = #{studentId}
    ,STUDENT_EMAIL = #{studentEmail}
    ,STUDENT_BIRTH = #{studentBirth}
    ,STUDENT_ADDR = #{studentAddr}
    ,STUDENT_ADDR_DETAIL = #{studentAddrDetail}
    ,STUDENT_POST = #{studentPost}
    ,STUDENT_PHONE1 = #{studentPhone1}
    ,STUDENT_PHONE2 = #{studentPhone2} 
    ,STUDENT_IMAGE = #{studentImage}
    ,STUDENT_STORE_IMAGE = #{studentStoreImage}
where student_num = #{studentNum}
</update>
<delete id="studentDelete" parameterType="string">
delete from student where student_num = #{studentNum}
</delete>
<delete id="studentsDelete" parameterType="string">
delete from student
where student_num in
<foreach collection="studentsNum" item="studentNum" open="(" close=")" index="index" separator=",">
    #{studentNum}
</foreach>
</delete>
</mapper>
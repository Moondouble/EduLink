<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="EduLink.mapper.EmployeeMapper">
<sql id="empColumnsBase">
    emp_NUM as empNum, emp_NAME as empName, emp_ID as empId, emp_PW as empPw, emp_REGIST as empRegist
</sql>

<insert id="employeeInsert" parameterType="employeeDTO">
    insert into employee (emp_NUM, emp_NAME, emp_ID, emp_PW, emp_REGIST)
    values (#{empNum}, #{empName}, #{empId}, #{empPw}, sysdate)
</insert>

<select id="empSelectAll" resultType="employeeDTO" parameterType="startEndPageDTO">
select * from (
	select ROW_NUMBER() over (order by emp_NUM) as rn,
	       <include refid="empColumnsBase" />
	from employee
	<where>
		<!-- searchWord에 값이 없으므로 값이 있을 때만 사용하게 조건을 준다. -->
		<if test="searchWord != null">
		<!-- 검색 데이터가 일부만 사용할 수 있으므로 like을 사용하고 여러 컬럼을 검사하도록 한다. -->
			emp_NAME like '%' || #{searchWord} || '%'
			or emp_ID like '%' || #{searchWord} || '%'
			or emp_NUM like '%' || #{searchWord} ||'%'
		</if>
	</where>
) sub1
where rn between #{startRow} and #{endRow}
</select>
<select id="empCount" parameterType="string" resultType="integer"> 
    select count(*) from employee
    <if test='searchWord != null'>
        <where>
        emp_NAME like '%' || #{searchWord} || '%'
			or emp_ID like '%' || #{searchWord} || '%'
			or emp_NUM like '%' || #{searchWord} ||'%'
        </where>  
    </if>
</select>
<delete id="empDelete" parameterType="string">
delete from employee where emp_num = #{empNum}
</delete>
<delete id="employeesDelete" parameterType="string">
delete from employee
where emp_NUM in
<foreach collection="employeesNum" item="empNum" open="(" close=")" index="index" separator=",">
    #{empNum}
</foreach>
</delete>
</mapper>